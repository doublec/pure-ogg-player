/* /usr/local/include/AL/alc.h: */
using "lib:libopenal";

namespace openal;
const openal::ALC_INVALID = 0;
const openal::ALC_VERSION_0_1 = 1;
const openal::ALC_FALSE = 0;
const openal::ALC_TRUE = 1;
const openal::ALC_FREQUENCY = 4103;
const openal::ALC_REFRESH = 4104;
const openal::ALC_SYNC = 4105;
const openal::ALC_MONO_SOURCES = 4112;
const openal::ALC_STEREO_SOURCES = 4113;
const openal::ALC_NO_ERROR = 0;
const openal::ALC_INVALID_DEVICE = 40961;
const openal::ALC_INVALID_CONTEXT = 40962;
const openal::ALC_INVALID_ENUM = 40963;
const openal::ALC_INVALID_VALUE = 40964;
const openal::ALC_OUT_OF_MEMORY = 40965;
const openal::ALC_DEFAULT_DEVICE_SPECIFIER = 4100;
const openal::ALC_DEVICE_SPECIFIER = 4101;
const openal::ALC_EXTENSIONS = 4102;
const openal::ALC_MAJOR_VERSION = 4096;
const openal::ALC_MINOR_VERSION = 4097;
const openal::ALC_ATTRIBUTES_SIZE = 4098;
const openal::ALC_ALL_ATTRIBUTES = 4099;
const openal::ALC_CAPTURE_DEVICE_SPECIFIER = 784;
const openal::ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER = 785;
const openal::ALC_CAPTURE_SAMPLES = 786;
extern ALCcontext* alcCreateContext(ALCdevice*, int*);
extern char alcMakeContextCurrent(ALCcontext*);
extern void alcProcessContext(ALCcontext*);
extern void alcSuspendContext(ALCcontext*);
extern void alcDestroyContext(ALCcontext*);
extern ALCcontext* alcGetCurrentContext();
extern ALCdevice* alcGetContextsDevice(ALCcontext*);
extern ALCdevice* alcOpenDevice(void*);
extern char alcCloseDevice(ALCdevice*);
extern int alcGetError(ALCdevice*);
extern char alcIsExtensionPresent(ALCdevice*, char*);
extern void* alcGetProcAddress(ALCdevice*, char*);
extern int alcGetEnumValue(ALCdevice*, char*);
extern char* alcGetString(ALCdevice*, int);
extern void alcGetIntegerv(ALCdevice*, int, int, int*);
extern ALCdevice* alcCaptureOpenDevice(void*, int, int, int);
extern char alcCaptureCloseDevice(ALCdevice*);
extern void alcCaptureStart(ALCdevice*);
extern void alcCaptureStop(ALCdevice*);
extern void alcCaptureSamples(ALCdevice*, void*, int);
